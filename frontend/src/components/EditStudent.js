import React, { useState, useEffect } from 'react';
import studentApi from '../services/studentApi';
import { useParams, useNavigate } from 'react-router-dom';
import Header from './Header';

const EditStudent = ({ onLogout }) => {
    const { id } = useParams();
    const navigate = useNavigate();
    const [form, setForm] = useState(null);

    useEffect(() => {
        const fetchStudent = async () => {
            try {
                const res = await studentApi.get(`/${id}`);
                setForm(res.data);
            } catch (error) {
                console.error('L·ªói l·∫•y h·ªçc sinh:', error);
                alert('Kh√¥ng t√¨m th·∫•y h·ªçc sinh');
                navigate('/student');
            }
        };
        fetchStudent();
    }, [id]);

    const handleChange = (e) => {
        setForm({ ...form, [e.target.name]: e.target.value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            await studentApi.put(`/update/${id}`, form);
            alert('‚úÖ C·∫≠p nh·∫≠t h·ªçc sinh th√†nh c√¥ng!');
            navigate('/student');
        } catch (error) {
            console.error('‚ùå L·ªói c·∫≠p nh·∫≠t:', error);
            alert('L·ªói khi c·∫≠p nh·∫≠t h·ªçc sinh. Vui l√≤ng th·ª≠ l·∫°i!');
        }
    };

    if (!form) return <p className="text-center mt-10">ƒêang t·∫£i d·ªØ li·ªáu...</p>;

    return (
        <div>
            <Header onLogout={onLogout} />
        <div className="form-container">
            <h2 className="form-title">C·∫≠p nh·∫≠t h·ªçc sinh</h2>
            <form onSubmit={handleSubmit} className="student-form">
                <input name="firstName" value={form.firstName} onChange={handleChange} placeholder="H·ªç" required />
                <input name="lastName" value={form.lastName} onChange={handleChange} placeholder="T√™n" required />
                <input name="mathScore" type="number" value={form.mathScore} onChange={handleChange} placeholder="To√°n" />
                <input name="physicsScore" type="number" value={form.physicsScore} onChange={handleChange} placeholder="L√Ω" />
                <input name="chemistryScore" type="number" value={form.chemistryScore} onChange={handleChange} placeholder="H√≥a" />
                <input name="literatureScore" type="number" value={form.literatureScore} onChange={handleChange} placeholder="VƒÉn" />
                <input name="englishScore" type="number" value={form.englishScore} onChange={handleChange} placeholder="Anh" />
                <input name="behaviorScore" value={form.behaviorScore} onChange={handleChange} placeholder="H·∫°nh ki·ªÉm" />
                <input name="className" value={form.className} onChange={handleChange} placeholder="L·ªõp" className="bg-gray-100" />
                <button type="submit" className="btn submit-btn">üíæ L∆∞u thay ƒë·ªïi</button>
            </form>
        </div>
        </div>

    );
};

export default EditStudent;
